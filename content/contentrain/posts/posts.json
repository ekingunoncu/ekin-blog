[
  {
    "updatedAt": 1671475018153,
    "createdAt": 1649356548494,
    "ID": "36de95b9-5632-4879-b996-50aff9ce9857",
    "content": "# Spring Framework On Lambda (Without Spring Boot)\n\n![Spring Framework On Lambda (Without Spring Boot](https://s3.eu-central-1.amazonaws.com/1ek.in.images/lambda_spring.jpg)\n\nSpring framework and Spring Boot are different things.\n\nEven the repositories are distinct.\n\n## [GitHub - spring-projects/spring-framework: Spring Framework](https://github.com/spring-projects/spring-framework)\n\n### [This is the home of the Spring Framework: the foundation for all Spring projects. Collectively the Spring Framework and‚Ä¶](https://github.com/spring-projects/spring-framework)\n\n[github.com](https://github.com/spring-projects/spring-framework)\n\n## [GitHub - spring-projects/spring-boot: Spring Boot](https://github.com/spring-projects/spring-boot)\n\n### [Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss‚Ä¶](https://github.com/spring-projects/spring-boot)\n\n[github.com](https://github.com/spring-projects/spring-boot)\n\nWe won‚Äôt cover what is what in this article but simply you can read descriptions of these repositories.\n\nIf you need Spring Boot on Lambda AWS already has a great starter project making use of the Maven archetypes.\n\n## [Quick start Spring Boot2 ¬∑ awslabs/aws-serverless-java-container Wiki](https://github.com/awslabs/aws-serverless-java-container/wiki/Quick-start---Spring-Boot2)\n\n### [You can't perform that action at this time. You signed in with another tab or window. You signed out in another tab or‚Ä¶](https://github.com/awslabs/aws-serverless-java-container/wiki/Quick-start---Spring-Boot2)\n\n[github.com](https://github.com/awslabs/aws-serverless-java-container/wiki/Quick-start---Spring-Boot2)\n\n![Hello World](https://s3.eu-central-1.amazonaws.com/1ek.in.images/ref.gif)\n\nI am not going to bother you with **blah blah blah** just check out the starter I created! I also wrote some comments for your better understanding.\n\n## [GitHub - ekingunoncu/spring-lambda-starter](https://github.com/ekingunoncu/spring-lambda-starter)\n\n### [You can't perform that action at this time. You signed in with another tab or window. You signed out in another tab or‚Ä¶](https://github.com/ekingunoncu/spring-lambda-starter)\n\n[github.com](https://github.com/ekingunoncu/spring-lambda-starter)\n\n- You will need sam-cli. *[What is sam-cli?](https://aws.amazon.com/tr/serverless/aws-sam/#:~:text=The%20AWS%20Serverless%20Application%20Model,and%20model%20it%20using%20YAML.)*\n- You will need aws-cli and configure your IAM ACCESS and SECRET\n\n```\naws configure set aws_access_key_id *o*o*o*o*o*o*o*o*o\naws configure set aws_secret_access_key *o*o*o*o*o*o*o*o*o\naws configure set default.region us-east-1\n```\n\n- How to build and deploy\n\n```\nMAVEN_OPTS=\"-DskipTests=true\" sam build\nsam deploy --stack-name ${STACK_NAME} --s3-bucket ${DEPLOY_BUCKET} --capabilities CAPABILITY_IAM\n```\n\nor use shell scripts under the repository but don't forget to change your deploy bucket (an empty bucket to use for the deploy process)\n\n```\nsh sam-build.sh\nsh sam-deploy.sh\n```\n\nAnd our Lambda Function just hatched üê£\n\n![Hello World](https://s3.eu-central-1.amazonaws.com/1ek.in.images/hello_world.png)\n\nThanks for reading.\n\nPlease follow me if you like and don‚Äôt hesitate to ask questions in the comments!\n",
    "title": "Spring Framework On Lambda (Without Spring Boot)",
    "description": "Spring Framework On Lambda (Without Spring Boot)\nIOC on lambda",
    "categories": [
      "cloud"
    ],
    "tags": [
      "lambda",
      "spring"
    ],
    "slug": "spring -framework-on-lambda",
    "author": {
      "updatedAt": 1671475385857,
      "createdAt": 1649356758106,
      "ID": "efa1af93-736f-4723-9a25-afb9c4010c5a",
      "displayName": "Ekin G√ºn √ñnc√º",
      "avatarImage": "public/1671475381803_ekin.png",
      "role": "Software Engineer"
    },
    "coverImage": "public/1671474486210_lambda_spring.jpg"
  },
  {
    "content": "# Puppeteer vs Selenium\n![Puppeteer vs Selenium](https://s3.eu-central-1.amazonaws.com/1ek.in.images/puppeteer_vs_se.png)\n\nIf you are trying to select one of these frameworks you are in the right place!\n\nIf you know much already, please skip to the third section! üòé\n\nI worked with both of these frameworks, to be honest, there is no winner of this comparison. But certainly, you have to select Puppeteer or Selenium up to your use case.\n\n1) What is Selenium?\n\nSelenium is an open-source framework to manipulate the web browser, you can use Selenium with multiple languages. In the industry, the most preferred languages to implement Selenium are Java and C#. The reason is that these software languages are the most used languages for enterprise web development.\n\n2) What is Puppeteer?\n\nPuppeteer is a NodeJS library available on NPM like any other NodeJS libraries :). Therefore you have to use Typescript or Javascript to create and run your tests. Using both JS and TS, you may implement the notorious pattern Page Object.\n\n3) What is the true choice over these two promising frameworks?\n\n- When testing mobile how important to be native for your application?\n\nI am asking this because with Puppeteer you can test for different screen resolutions to simulate the mobile view, but if your app has native device dependencies like using the mobile device‚Äôs camera or maybe your app uses a browser interface object like WebRTC you have to use the real device to test and the only way to automate it for a native mobile web browser (Mobile Safari on iOS or Chrome on Android) is the Appium framework which you can run almost the same script you wrote for your a normal WebDriver test.\n\nThe pro here is you don't have to write another script to test a real device‚Äôs mobile web browser.\n\n- Do you really need to execute the test on real devices?\n\nIt depends on how serious you are because during my career I have seen apps that run perfectly on one version of IOS but on another version fails even on the same model. It is worse for Android! Because every brand has its own distribution, they change a lot on core Android. If you are a manager in an enterprise company who loves her/his job you may like to go safer and test them all! Before a customer finds the bug. Believe me, it is nearly impossible to make an app without bugs without testing on multiple platforms.\n\nNow the question is ‚ÄúWhere to find all that real devices to run tests?‚Äù\n\nUse Testinium! Check out the link [testinium](https://testinium.com/automated/)\n\nnote: I am not going to lie here üëê , I work for Testinium but even if I didn't work there I would use it. It not only provides real devices but also managing your scenarios and features like reporting and scheduling are very convincing.\n\nBut if you are working in a startup don‚Äôt think too much, because maybe your app doesn't have to work 100% in every possible device, model, and version combination.\n\n- Is your app has to work on any condition on any browser?\n\nTo be brief Puppeteer has no official Safari Browser support. Using different versions of Chrome and Firefox is a real pain. If you want to test all possible versions for all possible browsers running on various operating systems you have to stick to Selenium. But its really frustrating to manage all environments by yourself, use Testinium üòÉ [testinium](https://testinium.com/) üòÜ\n\n- Do you need speed?\n\nIf you are a start-up company which is developing the features rapidly. Puppeteer is a great choice because it is simple to develop and binding it with your CI/CD pipelines might be a nice solution for a young company.\n\n- Which realm are you from?\n\nI love both Java and JS/TS. If you are familiar with the NodeJS environment you may select Puppeteer otherwise if there is no need for an adventure stick with Selenium.\n\n‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî-\n\nDon‚Äôt be afraid, for both Selenium and Puppeteer there are BDD options like Cucumber and enough testing frameworks like JUnit.\n\nLet‚Äôs look at some Puppeteer code\n\nThis might be your BasePage object:\n\n```\nexport default class BasePage {\n\nasync wait(time) {\n await page.waitFor(time)\n}async getTitle() {\n return await page.title()\n}async getUrl() {\n return await page.url()\n }\n}\n```\n\nAnd this might be your LoginPage object:\n\n```\nimport BasePage from './BasePage'export default class LoginPage extends BasePage {\nasync visit() {\n await page.goto('https://testinium.com/login')\n}async isLoginFormDisplayed() {\n await page.waitForSelector('#login_form')\n await page.waitForSelector('#user_login')\n await page.waitForSelector('#user_password')\n}async login(user, password) {\n await page.waitForSelector('#login_form')\n await page.type('#user_login', user)\n await page.type('#user_password', password)\n await page.click('.btn-primary')\n}\n}\n```\n\nIf you noticed the code is written in TS.\n\n- Try Puppeteer online through [try-puppeteer](https://try-puppeteer.appspot.com/) !\n\n![Puppeteer test](https://s3.eu-central-1.amazonaws.com/1ek.in.images/test.png)\n\nThanks for reading! üò∫",
    "categories": [
      "test automation"
    ],
    "tags": [
      "puppeteer",
      "selenium"
    ],
    "description": "What is Selenium? What is Puppeteer?",
    "ID": "63aa5e8a-68bf-4001-a232-10c5156768d5",
    "title": "Puppeteer vs Selenium",
    "slug": "puppeteer_vs_selenium",
    "author": {
      "ID": "8a63fa7e-673f-45f8-a83e-6cd63d9ee657",
      "displayName": "Ekin G√ºn √ñnc√º",
      "avatarImage": "public/1671478634577_ekin.png",
      "role": "Software Engineer",
      "createdAt": 1671478638234
    },
    "coverImage": "public/1671478055740_puppeteer_vs_se.png",
    "createdAt": 1671478091076
  },
  {
    "description": "Hey there! I and my team use Elasticsearch in our project but we implemented it a long time ago. I was wondering what‚Äôs new with Spring and Elasticsearch.",
    "slug": "spring_reactive_elasticsearch",
    "content": "# Spring Reactive Elasticsearch\n\nCreated: December 20, 2022 2:52 PM\nURL: https://medium.com/testinium/spring-reactive-elasticsearch-21a548194501\n\n![Spring Reactive Elasticsearch Coffee](https://s3.eu-central-1.amazonaws.com/1ek.in.images/background.jpeg)\n\nHey there! I and my team use Elasticsearch in our project but we implemented it a long time ago. I was wondering what‚Äôs new with Spring and Elasticsearch.\n\nWe are used to using JPA(Java Persistence API), it is so nice to let the JPA write queries for us. Can we do that for non-relational databases? Yes, we can! Additionally, we can use reactive repositories that return data to us as flux!\n\nThis below is a JSON aspect of the stock data for one day. The stock market data changes incredibly fast you may want to store it on a trusted solution :)\n\n```\n{\n \"Date\": \"24.02.2010 18:10:00\",\n \"Open\": 5.02,\n \"High\": 5.21,\n \"Low\": 5.02,\n \"Close\": 5.02,\n \"Volumes\": 8869442\n}\n```\n\nBut first, you need an Elasticsearch instance to connect. Let me help with that! If you have docker on your local machine once you execute the command below you will have an Elasticsearch instance.\n\n```\ndocker run -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch:7.9.1\n```\n\nThere is not much to talk about, I will give the Github repository to you. Check the code out!\n\n## [ekingunoncu/ElacticsearchReactiveRepository](https://github.com/ekingunoncu/ElacticsearchReactiveRepository)\n\n### [Contribute to ekingunoncu/ElacticsearchReactiveRepository development by creating an account on GitHub.](https://github.com/ekingunoncu/ElacticsearchReactiveRepository)\n\n[github.com](https://github.com/ekingunoncu/ElacticsearchReactiveRepository)\n\nI am putting some important parts of my code just in case if you want to give a quick look at how is the code looks like. Check below.\n\nYou can look at the old approach from here [https://www.baeldung.com/elasticsearch-java](https://www.baeldung.com/elasticsearch-java), what we did is we made java create these Elasticsearch queries for us simply and swiftly.\n\nThanks for reading this far :)",
    "title": "Spring Reactive Elasticsearch",
    "tags": [
      "spring",
      "elasticsearch"
    ],
    "categories": [],
    "ID": "60df9ff9-3d90-4c91-88e9-5c05ee658f89",
    "author": [],
    "coverImage": "public/1671537413864_background.jpeg",
    "createdAt": 1671537420515
  }
]